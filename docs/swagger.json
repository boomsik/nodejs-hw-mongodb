{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "My contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This API allows users to manage contacts by creating, updating, and deleting contacts. Each contact contains a name, phone number, email, and other personal information, along with the option to upload an image."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://nodejs-hw-mongodb-soy7.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Contacts",
      "description": "Endpoints for managing contacts, including creating, retrieving, updating, and deleting contact information."
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get list of contacts",
        "operationId": "getAllContacts",
        "description": "Get a list of contacts, supports pagination, sorting, and filtering.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "description": "Page number (default is 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "in": "query",
            "name": "perPage",
            "description": "Number of contacts per page (default is 10)",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "description": "Field to sort by (default is `_id`)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "_id"
            }
          },
          {
            "in": "query",
            "name": "sortOrder",
            "description": "Sort order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got list of contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully got contacts"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "contacts": {
                          "type": "array",
                          "items": null,
                          "$ref": "#/components/schemas/contact"
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "example": 1
                            },
                            "perPage": {
                              "type": "integer",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "example": 100
                            },
                            "totalPages": {
                              "type": "integer",
                              "example": 10
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a new contact with optional photo upload.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/contactAdd"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact added successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by ID",
        "operationId": "getContact",
        "description": "Get contact by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Patch contact by ID",
        "operationId": "patchContact",
        "description": "Update a contact partially by ID. You can update specific fields of a contact, including uploading a new photo.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the contact to be updated",
            "example": "633d45fc8f1d3b1bb01f7c38"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated contact name",
                    "example": "Jane Doe"
                  },
                  "email": {
                    "type": "string",
                    "description": "Updated contact email",
                    "example": "jane.doe@example.com"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "description": "Updated contact phone number",
                    "example": "+1234567890"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "description": "Whether the contact is marked as favorite",
                    "example": false
                  },
                  "contactType": {
                    "type": "string",
                    "description": "Type of contact (e.g., personal, business)",
                    "enum": [
                      "personal",
                      "business"
                    ],
                    "example": "personal"
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary",
                    "description": "Optional updated photo for the contact"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact patched successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete contact by ID",
        "operationId": "deleteContact",
        "description": "Delete a contact by its id.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the contact to be deleted",
            "example": "633d45fc8f1d3b1bb01f7c38"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted contact"
          },
          "404": {
            "description": "Contact not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Contact with id=633d45fc8f1d3b1bb01f7c38 not found."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "contact": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "contactType",
          "userID"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+123456789"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "personal",
              "business"
            ],
            "example": "personal"
          },
          "photo": {
            "type": "string",
            "example": "http://example.com/photo.jpg"
          },
          "userID": {
            "type": "string",
            "format": "uuid",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          }
        }
      },
      "contactAdd": {
        "type": "object",
        "required": [
          "name",
          "phoneNumber",
          "contactType"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "phoneNumber": {
            "type": "string",
            "example": "+123456789"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "isFavourite": {
            "type": "boolean",
            "example": false
          },
          "contactType": {
            "type": "string",
            "enum": [
              "personal",
              "business"
            ],
            "example": "personal"
          },
          "photo": {
            "type": "string",
            "format": "binary"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Invalid input data",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid input data"
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized access",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Unauthorized access"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Contact not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "server error"
                }
              }
            }
          }
        }
      }
    }
  }
}