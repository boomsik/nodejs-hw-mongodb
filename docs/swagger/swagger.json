{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Назва вашого додатку",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "Опис вашого додатку"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "<посилання на задеплоєний сайт>"
    }
  ],
  "paths": {
    "/contacts/{contactId}": {
      "get": {
        "get": {
          "tags": ["Contacts"],
          "summary": "Get a contact by ID",
          "operationId": "getContactById",
          "description": "Retrieve a specific contact using its ID.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "description": "The ID of the contact to retrieve",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            },
            "404": {
              "description": "Contact not found"
            }
          }
        }
      },
      "patch": {
        "patch": {
          "tags": ["Contacts"],
          "summary": "Update a contact by ID",
          "operationId": "updateContactById",
          "description": "Update a specific contact's details using its ID.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "description": "The ID of the contact to update",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Contact successfully updated",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            },
            "404": {
              "description": "Contact not found"
            }
          }
        }
      },
      "delete": {
        "delete": {
          "tags": ["Contacts"],
          "summary": "Delete a contact by ID",
          "operationId": "deleteContactById",
          "description": "Delete a specific contact using its ID.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "contactId",
              "in": "path",
              "required": true,
              "description": "The ID of the contact to delete",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Contact successfully deleted"
            },
            "404": {
              "description": "Contact not found"
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "get": {
          "tags": ["Contacts"],
          "summary": "Get all contacts",
          "operationId": "getAllContacts",
          "description": "Retrieve all contacts for the authenticated user.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "page",
              "in": "query",
              "required": false,
              "description": "Page number for pagination",
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "description": "Limit of contacts per page",
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Contact"
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No contacts found"
            }
          }
        }
      },
      "post": {
        "post": {
          "tags": ["Contacts"],
          "summary": "Create a new contact",
          "operationId": "createContact",
          "description": "Create a new contact in the system.",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/Contact"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Contact successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Contact"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "post": {
          "tags": ["Auth"],
          "summary": "User login",
          "operationId": "loginUser",
          "description": "Logs in a user and returns a JWT token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "example": "password123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Successful login",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "token": {
                        "type": "string",
                        "description": "JWT token"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid email or password"
            },
            "401": {
              "description": "Unauthorized"
            }
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "post": {
          "tags": ["Auth"],
          "summary": "User registration",
          "operationId": "signupUser",
          "description": "Registers a new user.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "John Doe"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@example.com"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "example": "password123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "User successfully registered",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Invalid input data"
            }
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "post": {
          "tags": ["Auth"],
          "summary": "Password reset",
          "operationId": "resetPassword",
          "description": "Resets the password for a user using a reset token.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "JWT_RESET_TOKEN"
                    },
                    "password": {
                      "type": "string",
                      "format": "password",
                      "example": "newpassword123"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Password successfully reset"
            },
            "400": {
              "description": "Invalid or expired token"
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "Contact": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "type": "string"
          },
          "contactType": {
            "type": "string",
            "enum": ["work", "personal"]
          }
        },
        "required": ["name", "email"]
      }
    }
  }
}
